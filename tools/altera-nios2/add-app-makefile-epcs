#!/bin/bash
# $ ./add-app-makefile-epcs [MAKEFILE]
# Add EPCS targets to APP Makefile for Qsys processors.

MAKE_FILE=$1

cat >> ${MAKE_FILE} <<'Heredoc'

# Rules for EPCS flash programming commands (EPCS contains SOF and application)
PROGRAM_EPCS_SUFFIX := -epcs
PROGRAM_EPCS_TARGET := $(addsuffix $(PROGRAM_EPCS_SUFFIX), $(FLASH_FILES))
PROGRAM_EPCS_OVERRIDE := --override=$(OPLK_BASE_DIR)/tools/altera-nios2/nios2-flash-override.txt
PROG_DIR_REL := $(QUARTUS_PROJECT_DIR)/../../common/prog
PROG_DIR := $(realpath $(PROG_DIR_REL))

ifneq ("$(DOWNLOAD_CABLE_FLAG)","")
	PROG_CABLE_ARG := --cable '$(DOWNLOAD_CABLE_FLAG)'
endif

ifneq ("$(PROG_OFFSET)","")
	PROG_OFFSET_ARG := --offset $(PROG_OFFSET)
endif

.PHONY : program-epcs
program-epcs : $(PROGRAM_EPCS_TARGET)

SOF_FILE := $(wildcard $(QUARTUS_PROJECT_DIR)/*.sof)

.PHONY : $(PROGRAM_EPCS_TARGET)
$(PROGRAM_EPCS_TARGET) : $(ELF)
	@$(ECHO) Info: Programming $(basename $@).flash
	@$(ECHO) Info: Using prog directory $(PROG_DIR)
	@if [ -n "$($(basename $@)_EPCS_FLAGS)" ]; \
	then \
		$(OPLK_BASE_DIR)/tools/altera-nios2/program-epcs.sh $(SOF_FILE) $(ELF) --prog $(PROG_DIR) $(PROG_OFFSET_ARG) $(PROG_CABLE_ARG); \
	fi

# Rule for epcs help output
help::
	@$(ECHO)
	@$(ECHO) "  EPCS flash targets:"
	@$(ECHO) "    program-epcs      - Program EPCS flash device with SOF and ELF"
	@$(ECHO) "                        Set PROG_OFFSET to different offset than 0x0."
	@$(ECHO) "                        e.g. make program-epcs PROG_OFFSET=0x80000"

Heredoc
